How did viewing a diff between two versions of a file help you see the bug that was introduced?

Diff will highlight the differences between two files or two versions of a file.  The user can 
then figure out which among the differences are faulty.

How could having easy access to the entire history of a file make you a more efficient programmer
in the long term?

Having easy access to the entire history of a file helps the programmer to see the
changes he have done on the file.  He can track the different features added or removed
through the course of time.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros:
1) User have the freedom to choose how atomic his/her commits needs to be.
2) You don't get commits without any logical meaning.

Cons:
1) Requires discipline, the user in the heat of coding forgets to commit after a long time.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git allows saving multiple files since Git is used for types of files that go together, ex. source code.  While Google Docs deal with mostly stand alone files.

How can you use the commands git log and git diff to view the history of files?

You use git log to view the history of the files commits and then use git diff to see what actually changed between commit ids.

How might using version control make you more confident to make changes that could break something?

Very confident, since you know you can always revert back to a previous working version.